# Clang 9 is required.
build --client_env=CC=clang

# Disable warnings we don't care about.
build --copt=-Wno-unused-local-typedef

# C++14 standard version is required.
build --cxxopt=-std=c++14 --host_cxxopt=-std=c++14

# Necessary linker options.
build --linkopt=-pthread
build --linkopt=-ldl
build --linkopt=-lm
build --host_linkopt=-pthread
build --host_linkopt=-ldl
build --host_linkopt=-lm

# Default to an optimized build.
# Override via: "-c dbg" or --compilation_mode=dbg
# build --compilation_mode=opt


# Disable RTTI and exceptions
build:disable_rtti_and_exceptions --no//:rtti_and_exceptions

# Minimize code size for //tools:code_size_test_driver target.
build:code_size_test --compilation_mode=opt --copt=-Os
build:code_size_test --linkopt=-Wl,--strip-all --linkopt=-Wl,--icf=safe
build:code_size_test --config=disable_rtti_and_exceptions

# Remote repo experimental feature
build --experimental_repo_remote_exec

# I think this is what allows us to build out of tree
build --nocheck_visibility

# BAZEL DEBUG BUILD NOTES
# Creating a debug build for Tensorflow is extremely taxing. Enabling debug for all of Tensorflow makes the build and link process take 3-4 hours. It finally doesn't work as the library is too large to be loaded. 
# As a solution to this problem, the bazel option --per_file_copt is awesome as it allows just the files within a particular package to be built with different flags. 
# This is used in the below command to create a Tensorflow build which includes only debug symbols for Tensorflow Lite. Tensorflow also requires bazel version 3.7.2, so this is used locally just for the Tensorflow build.
# In the following command, we build the target "build_pip_package". This builds all(most) of Tensorflow and creates a Python whl package which we can "pip install". This can then be used to debug the TFLite interpreter when we are invoking it via the Tensorflow Python API, such as in xformer1.
# ./bazel-3.7.2-darwin-x86_64 build -c opt --config=opt --strip="never" --per_file_copt=//tensorflow/lite/.*\.cc@-g,-O0 //tensorflow/tools/pip_package:build_pip_package

# Use the following command to create a debug build for xformer2
# bazel build -c dbg --spawn_strategy=local --javacopt="-g" --copt="-g" --strip="never" //:xcore-opt
