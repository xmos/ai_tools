#********************
# C compiler flags
#********************
CC := gcc
CC_PREFIX :=
CCFLAGS := -DNDEBUG -g -DTF_LITE_STATIC_MEMORY -O3 

#********************
# C++ compiler flags
#********************
CXX := g++
CXXFLAGS := -DNDEBUG -g -DTF_LITE_STATIC_MEMORY -O3
CXXFLAGS += -std=c++11 

LDFLAGS  := -L/usr/local/lib -lstdc++ -lm

TARGET = test_model
BIN_DIR := bin

#********************
# Dependencies
#********************
FLATBUFFERS_DIR := ../../../flatbuffers
GEMMLOWP_DIR := ../../../gemmlowp
TENSORFLOW_DIR := ../../../tensorflow
LIB_NN_DIR := ../../xcore/operator_book/lib_nn_operator

INCLUDES := \
   -I$(FLATBUFFERS_DIR)/include \
   -I$(GEMMLOWP_DIR) \
   -I$(TENSORFLOW_DIR) \
   -I$(LIB_NN_DIR)/api \
   -Isrc

SOURCES := \
   $(TENSORFLOW_DIR)/tensorflow/lite/c/common.c \
   $(TENSORFLOW_DIR)/tensorflow/lite/core/api/error_reporter.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/core/api/flatbuffer_conversions.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/core/api/op_resolver.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/core/api/tensor_utils.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/debug_log_numbers.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/memory_helpers.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/micro_allocator.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/micro_error_reporter.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/micro_interpreter.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/micro_mutable_op_resolver.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/micro_utils.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/simple_memory_allocator.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/memory_planner/linear_memory_planner.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/debug_log.cc \
   $(TENSORFLOW_DIR)/tensorflow/lite/micro/kernels/xcore/xcore_ops_resolver.cc \
   $(wildcard $(LIB_NN_DIR)/src/*.c) \
   $(wildcard src/*.cc)

OBJECTS := $(SOURCES:%.c=%.o)
OBJECTS += $(SOURCES:%.cc=%.o)

OBJECT_FILES := $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(SOURCES)))

.PHONY: all clean $(TARGET)

all: $(BIN_DIR)/$(TARGET)

%.o: %.c
	$(CC) $(CCFLAGS) $(INCLUDES) -o $@ -c $<

%.o: %.cc
	$(CXX) $(CXXFLAGS) $(INCLUDES) -o $@ -c $<

$(BIN_DIR)/$(TARGET): $(OBJECTS)
	$(CXX) $(LDFLAGS) $(OBJECT_FILES) -o $(BIN_DIR)/$(TARGET)

clean:
	-@rm -rvf $(OBJECT_FILES) $(BIN_DIR)/$(TARGET)
