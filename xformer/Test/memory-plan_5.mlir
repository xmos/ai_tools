// RUN: xcore-opt --mlir-io %s --xcore-plan-memory -mlir-print-ir-module-scope -mlir-disable-threading | FileCheck %s

// CHECK: xc.offsets = dense<[1152, 768, 384, 0, 9792, 9408, 9024, 7296, 6528, 1536, 768, 0]> : vector<12xi32>
func.func @main(%arg0: tensor<1x4x1x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x17x96x!quant.uniform<i8:f32, 0.0078384801745414734:-1>> attributes {tf.entry_function = {inputs = "arg0", outputs = "C"}} {
  %0 = "xc.pad"(%arg0) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 96 : i32, size = 48 : i32, start = 96 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x1x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x3x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %1 = "xc.pad"(%0) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 96 : i32, size = 144 : i32, start = 96 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x3x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x5x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %2 = "xc.pad"(%1) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 96 : i32, size = 240 : i32, start = 96 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x5x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x7x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %3 = "xc.pad"(%2) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 96 : i32, size = 336 : i32, start = 96 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x7x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x9x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %4 = "xc.pad"(%3) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 96 : i32, size = 432 : i32, start = 96 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x9x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x11x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %5 = "xc.pad"(%4) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 96 : i32, size = 528 : i32, start = 96 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x11x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x13x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %6 = "xc.pad"(%2) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 96 : i32, size = 336 : i32, start = 96 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x7x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x9x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %7 = "xc.pad"(%6) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 192 : i32, size = 432 : i32, start = 192 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x9x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x13x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %8 = "xc.concat"(%5, %7) <{num_copies = 52 : i32, sizes = [48 : i32, 48 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], num_inputs = 2 : i32, use_vpu = true}> : (tensor<1x4x13x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>, tensor<1x4x13x48x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x13x96x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %9 = "xc.pad"(%8) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 192 : i32, size = 1248 : i32, start = 192 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x13x96x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x15x96x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  %10 = "xc.pad"(%9) <{end = 0 : i32, num_copies = 3 : i32, pad_size = 192 : i32, size = 1440 : i32, start = 192 : i32, use_vpu = true, zero_point = -1 : i32}> : (tensor<1x4x15x96x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>) -> tensor<1x4x17x96x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
  return %10 : tensor<1x4x17x96x!quant.uniform<i8:f32, 0.0078384801745414734:-1>>
}
